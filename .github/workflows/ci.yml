name: CI

on:
  - push
  - pull_request

jobs:
  test:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        buildtype:
          - Release
          - Debug
          - MinSizeRel
          - RelWithDebInfo
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build
      - name: Configure CMake
        working-directory: ${{runner.workspace}}/build
        run: cmake ${{github.workspace}} -DCMAKE_BUILD_TYPE=${{matrix.buildtype}}
      - name: Build
        working-directory: ${{runner.workspace}}/build
        run: cmake --build . --config ${{matrix.buildtype}}
      - name: Test
        working-directory: ${{runner.workspace}}/build
        run: ctest -C ${{matrix.buildtype}} --output-on-failure
  wsl:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        buildtype:
          - Release
          - Debug
          - MinSizeRel
          - RelWithDebInfo
    steps:
      - uses: actions/checkout@master
      - uses: actions/cache@v2
        id: distrocache
        with:
          path: distro.zip
          key: distro-ubuntu1804
      - name: Download WSL distribution
        if: steps.distrocache.outputs.cache-hit != 'true'
        shell: powershell
        run: Invoke-WebRequest -Uri https://aka.ms/wsl-ubuntu-1804 -OutFile distro.zip -UseBasicParsing
      - name: Extract WSL distribution
        shell: powershell
        run: Expand-Archive .\distro.zip .\distro
      - name: Install WSL distribution
        shell: powershell
        run: .\distro\ubuntu1804.exe install --root
      - name: Update distribution dependency information
        run: wsl -u root -- apt-get update
      - name: Install CMake and build-essential
        run: wsl -u root -- apt-get -y install cmake build-essential
      - name: Create Build Environment
        run: wsl -- cmake -E make_directory build
      - name: Configure CMake
        run: wsl -- cmake -E chdir build cmake .. -DCMAKE_BUILD_TYPE=${{matrix.buildtype}}
      - name: Build
        run: wsl -- cmake -E chdir build cmake --build . --config ${{matrix.buildtype}}
      - name: Test
        run: wsl -- cmake -E chdir build ctest -C ${{matrix.buildtype}} --output-on-failure
